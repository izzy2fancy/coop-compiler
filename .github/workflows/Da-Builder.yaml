name: Coop-Compiler-Builder

on:
  workflow_dispatch:

jobs:

  build:
  
    strategy:
      matrix:
        configuration: [Debug, Release]
    
    runs-on: windows-latest

    env:
      Solution_Name: coop-compiler.sln
      UWP_Project_Directory: coop-compiler
      UWP_Project_Path: coop-compiler/coop-compiler.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

# Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test
      
# Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    - name: Decode the pfx and save it
      run: |
       $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.ENCODED_PFX }}")
       $certificatePath = "./GitHubActionsWorkflow.pfx"  
       [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Remove the pfx
      run: Remove-Item -Path "./GitHubActionsWorkflow.pfx"
      
    - name: Create the app package
      run: msbuild $env:UWP_Project_Path /p:Configuration=Release /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxBundle=Never /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.PFX_KEY }}

    - name: Remove the pfx
      run: Remove-Item -path $env:Solution_Name\GitHubActionsWorkflow.pfx

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
